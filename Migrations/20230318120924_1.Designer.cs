// <auto-generated />
using System;
using G_P;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GP.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230318120924_1")]
    partial class _1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("G_P.Entities.anular_matrimonio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.HasKey("id");

                    b.ToTable("anular");
                });

            modelBuilder.Entity("G_P.Entities.inscribir_matrimoio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("codigo_referencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contrayente_1_apellido_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contrayente_1_apellido_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contrayente_1_nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contrayente_2_apellido_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contrayente_2_apellido_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contrayente_2_nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_inscripcion_matrimonio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_nacimiento_contrayente_1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_nacimiento_contrayente_2")
                        .HasColumnType("datetime2");

                    b.Property<int>("folio")
                        .HasColumnType("int");

                    b.Property<string>("madre_contrayente_1_apellido_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("madre_contrayente_1_apellido_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("madre_contrayente_1_nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("madre_contrayente_2_apellido_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("madre_contrayente_2_apellido_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("madre_contrayente_2_nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("municipio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("municipio_nacimiento_contrayente_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("municipio_nacimiento_contrayente_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("observaciones_contrayente_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("observaciones_contrayente_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("padre_contrayente_1_apellido_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("padre_contrayente_1_apellido_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("padre_contrayente_1_nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("padre_contrayente_2_apellido_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("padre_contrayente_2_apellido_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("padre_contrayente_2_nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("provincia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("provincia_nacimiento_contrayente_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("provincia_nacimiento_contrayente_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tomo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("inscipciones");
                });

            modelBuilder.Entity("G_P.Entities.matrimonios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_anulacion")
                        .HasColumnType("int");

                    b.Property<int>("id_inscripion")
                        .HasColumnType("int");

                    b.Property<int>("id_matrimonio")
                        .HasColumnType("int");

                    b.Property<string>("id_referencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_tramite")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("matrimonios");
                });

            modelBuilder.Entity("G_P.Entities.solicitar_matrimonio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.HasKey("id");

                    b.ToTable("solicitar");
                });
#pragma warning restore 612, 618
        }
    }
}
